[{"/Users/i043373/Documents/GitHub/issuetracker/src/index.js":"1","/Users/i043373/Documents/GitHub/issuetracker/src/serviceWorker.js":"2","/Users/i043373/Documents/GitHub/issuetracker/src/context/UserContext.js":"3","/Users/i043373/Documents/GitHub/issuetracker/src/components/App.js":"4","/Users/i043373/Documents/GitHub/issuetracker/src/context/LayoutContext.js":"5","/Users/i043373/Documents/GitHub/issuetracker/src/themes/index.js":"6","/Users/i043373/Documents/GitHub/issuetracker/src/themes/default.js":"7","/Users/i043373/Documents/GitHub/issuetracker/src/components/Layout/Layout.js":"8","/Users/i043373/Documents/GitHub/issuetracker/src/pages/error/Error.js":"9","/Users/i043373/Documents/GitHub/issuetracker/src/pages/login/Login.js":"10","/Users/i043373/Documents/GitHub/issuetracker/src/pages/login/styles.js":"11","/Users/i043373/Documents/GitHub/issuetracker/src/pages/error/styles.js":"12","/Users/i043373/Documents/GitHub/issuetracker/src/components/Layout/styles.js":"13","/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahub/IdeaHub.js":"14","/Users/i043373/Documents/GitHub/issuetracker/src/pages/notifications/Notifications.js":"15","/Users/i043373/Documents/GitHub/issuetracker/src/pages/charts/Charts.js":"16","/Users/i043373/Documents/GitHub/issuetracker/src/pages/home/Home.js":"17","/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/Sidebar.js":"18","/Users/i043373/Documents/GitHub/issuetracker/src/components/Header/Header.js":"19","/Users/i043373/Documents/GitHub/issuetracker/src/pages/maps/Maps.js":"20","/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/Dashboard.js":"21","/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/mock.js":"22","/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/components/Table/Table.js":"23","/Users/i043373/Documents/GitHub/issuetracker/src/pages/notifications/styles.js":"24","/Users/i043373/Documents/GitHub/issuetracker/src/pages/home/styles.js":"25","/Users/i043373/Documents/GitHub/issuetracker/src/components/PageTitle/PageTitle.js":"26","/Users/i043373/Documents/GitHub/issuetracker/src/components/Widget/Widget.js":"27","/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/styles.js":"28","/Users/i043373/Documents/GitHub/issuetracker/src/pages/maps/styles.js":"29","/Users/i043373/Documents/GitHub/issuetracker/src/components/Header/styles.js":"30","/Users/i043373/Documents/GitHub/issuetracker/src/pages/charts/components/ApexLineChart.js":"31","/Users/i043373/Documents/GitHub/issuetracker/src/pages/charts/components/ApexHeatmap.js":"32","/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/components/BigStat/BigStat.js":"33","/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/components/Dot.js":"34","/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/styles.js":"35","/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"36","/Users/i043373/Documents/GitHub/issuetracker/src/components/Notification/Notification.js":"37","/Users/i043373/Documents/GitHub/issuetracker/src/components/Wrappers/Wrappers.js":"38","/Users/i043373/Documents/GitHub/issuetracker/src/components/PageTitle/styles.js":"39","/Users/i043373/Documents/GitHub/issuetracker/src/components/Widget/styles.js":"40","/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/components/BigStat/styles.js":"41","/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/components/SidebarLink/styles.js":"42","/Users/i043373/Documents/GitHub/issuetracker/src/components/Notification/styles.js":"43","/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahubnew/IdeaHubForm.js":"44","/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahubnew/IdeaHub.js":"45","/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahub/IdeaList.js":"46","/Users/i043373/Documents/GitHub/issuetracker/src/components/cardlist/cardlist.js":"47","/Users/i043373/Documents/GitHub/issuetracker/src/pages/profile/Profile.js":"48","/Users/i043373/Documents/GitHub/issuetracker/src/pages/profile/styles.js":"49"},{"size":869,"mtime":1628222854132,"results":"50","hashOfConfig":"51"},{"size":4948,"mtime":1628222854135,"results":"52","hashOfConfig":"51"},{"size":2062,"mtime":1628997995615,"results":"53","hashOfConfig":"51"},{"size":1701,"mtime":1628222854128,"results":"54","hashOfConfig":"51"},{"size":1393,"mtime":1628230414855,"results":"55","hashOfConfig":"51"},{"size":502,"mtime":1628222854136,"results":"56","hashOfConfig":"51"},{"size":2987,"mtime":1628222854136,"results":"57","hashOfConfig":"51"},{"size":2090,"mtime":1628997232001,"results":"58","hashOfConfig":"51"},{"size":1571,"mtime":1628222854133,"results":"59","hashOfConfig":"51"},{"size":8466,"mtime":1628432249035,"results":"60","hashOfConfig":"51"},{"size":3133,"mtime":1628230713745,"results":"61","hashOfConfig":"51"},{"size":1334,"mtime":1628222854133,"results":"62","hashOfConfig":"51"},{"size":680,"mtime":1628222854128,"results":"63","hashOfConfig":"51"},{"size":6522,"mtime":1628995178804,"results":"64","hashOfConfig":"51"},{"size":9752,"mtime":1628222854135,"results":"65","hashOfConfig":"51"},{"size":5556,"mtime":1628222854132,"results":"66","hashOfConfig":"51"},{"size":7141,"mtime":1628432249034,"results":"67","hashOfConfig":"51"},{"size":3062,"mtime":1628995488853,"results":"68","hashOfConfig":"51"},{"size":6494,"mtime":1628997850399,"results":"69","hashOfConfig":"51"},{"size":971,"mtime":1628222854135,"results":"70","hashOfConfig":"51"},{"size":13191,"mtime":1628432249034,"results":"71","hashOfConfig":"51"},{"size":4110,"mtime":1628432249034,"results":"72","hashOfConfig":"51"},{"size":1274,"mtime":1628222854132,"results":"73","hashOfConfig":"51"},{"size":1925,"mtime":1628222854135,"results":"74","hashOfConfig":"51"},{"size":551,"mtime":1628222854133,"results":"75","hashOfConfig":"51"},{"size":427,"mtime":1628222854129,"results":"76","hashOfConfig":"51"},{"size":2485,"mtime":1628222854130,"results":"77","hashOfConfig":"51"},{"size":2952,"mtime":1628432249034,"results":"78","hashOfConfig":"51"},{"size":171,"mtime":1628222854135,"results":"79","hashOfConfig":"51"},{"size":4351,"mtime":1628694762343,"results":"80","hashOfConfig":"51"},{"size":1328,"mtime":1628222854132,"results":"81","hashOfConfig":"51"},{"size":1794,"mtime":1628222854132,"results":"82","hashOfConfig":"51"},{"size":4039,"mtime":1628222854132,"results":"83","hashOfConfig":"51"},{"size":862,"mtime":1628222854129,"results":"84","hashOfConfig":"51"},{"size":1304,"mtime":1628222854130,"results":"85","hashOfConfig":"51"},{"size":4432,"mtime":1628432249026,"results":"86","hashOfConfig":"51"},{"size":3364,"mtime":1628432249026,"results":"87","hashOfConfig":"51"},{"size":3790,"mtime":1628222854130,"results":"88","hashOfConfig":"51"},{"size":462,"mtime":1628222854129,"results":"89","hashOfConfig":"51"},{"size":969,"mtime":1628222854130,"results":"90","hashOfConfig":"51"},{"size":1027,"mtime":1628222854132,"results":"91","hashOfConfig":"51"},{"size":1412,"mtime":1628222854130,"results":"92","hashOfConfig":"51"},{"size":993,"mtime":1628222854129,"results":"93","hashOfConfig":"51"},{"size":3305,"mtime":1628432249034,"results":"94","hashOfConfig":"51"},{"size":1334,"mtime":1628560195418,"results":"95","hashOfConfig":"51"},{"size":1280,"mtime":1628658938805,"results":"96","hashOfConfig":"51"},{"size":1709,"mtime":1628654615293,"results":"97","hashOfConfig":"51"},{"size":779,"mtime":1628997490708,"results":"98","hashOfConfig":"51"},{"size":780,"mtime":1628222854134,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1ojg3n6",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/i043373/Documents/GitHub/issuetracker/src/index.js",[],["204","205"],"/Users/i043373/Documents/GitHub/issuetracker/src/serviceWorker.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/context/UserContext.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/App.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/context/LayoutContext.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/themes/index.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/themes/default.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Layout/Layout.js",["206"],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/error/Error.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/login/Login.js",["207","208"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport Image from 'material-ui-image';\nimport nvtrImg from \"../../images/navaritih.png\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"admin@navaritih.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={nvtrImg} alt=\"logo\" className={classes.logotypeImage} />\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Button size=\"large\" className={classes.googleButton}>\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating,\n                )}\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/Users/i043373/Documents/GitHub/issuetracker/src/pages/login/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/error/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Layout/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahub/IdeaHub.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/notifications/Notifications.js",["209","210","211","212","213","214"],"import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Notifications\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          <Grid item xs={4}>\n          <Widget title=\"Layout Options\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"Usage\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n          </Widget>\n            </Grid>\n          </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","/Users/i043373/Documents/GitHub/issuetracker/src/pages/charts/Charts.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/home/Home.js",["215"],"import React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Image from 'material-ui-image';\nimport sideImage from './../../images/SideImage1.png';\nimport pyramidImage from './../../images/navaritih_pyramid.png';\nimport pyramiImage from './../../pages/ideahub/IdeaHub';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport Notification from \"../../components/Notification\";\n\nexport default function HomePage() {\n  var classes = useStyles();\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n            <Grid container item xs={12}>\n              <Grid item xs={12}>\n                <div className={classes.head}>{\"Participate.Collaborate.Innovate\"}</div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className={classes.head}>{\"\"}</div>\n              </Grid>\n              <Grid item xs={6}>\n                <Widget noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n                  <br /> <br /> <br />\n                  <Typography variant=\"h4\">\n                    Foster your thoughts into ideas  and ideas into innovation. \n                    Collaborate on ideas and execute …\n                  </Typography>\n                  <br />\n                  <Typography>\n                    A platform to post new ideas and collaborate with like-minded to execute as a project. Search for existing ideas and express interest.\n                    Tag your ideas to increase the search hits that helps collaborators to contribute. Discuss with contributors to make them stakeholder \n                    or participant for the idea and co-execute.\n                  </Typography>\n                  <br /><br />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    component={Link}\n                    to=\"./IdeaHubForm\"\n                    size=\"large\"\n                    className={classes.backButton}\n                  >\n                    Submit Ideas\n                  </Button>\n                </Widget>\n              </Grid>\n              <Grid item xs={6}>\n                <Widget disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n                  <Image src={sideImage} aspectRatio='1/2' imageStyle={{width:'inherit'}} />\n                </Widget>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu> \n          <Grid container item xs={12}>\n            <Grid item xs={8}>\n              <Image src={pyramidImage} aspectRatio='1/4' imageStyle={{width:'inherit'}} />\n            </Grid>\n            <Grid item xs={4}>\n                  <Typography variant=\"h4\">\n                    Innvovator     Participant      Sponsor\n                  </Typography>\n                  <br />\n                  <Typography>\n                    The application can benefit multiple personas in the way each one look and infer the Ideas. \n                    The platform provides complete transparency among the collaborators. Sponsors can get timely status \n                    on the progress of execution.\n                  </Typography>\n            </Grid>\n          </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          <Grid item xs={4}>\n          <Widget title=\"\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n          <Notification\n              className={classes.notificationItem}\n              shadowless\n              message=\"Idea Tagging\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <br />\n            <Typography variant=\"h5\">Functional Stream</Typography>\n            <Typography>\n              Think ideas in the Consumer Industry space and that qualifies for the primary category of ideas. \n              For e.g. any business problem that are trying to be solved in the Consumer Industry space shall be \n              give a Functional tag.\n            </Typography>\n            <br />\n            <Typography variant=\"h5\">Technology Stream</Typography>\n            <Typography>\n              Tag your ideas a technology if you are trying to solve an issue using a technology trend. \n              This could be use of AI/ML, Big Data, Side Cars to solve a business problem.\n            </Typography>\n            <br />\n            <Typography variant=\"h5\">General Stream</Typography>\n            <Typography>\n              If the idea do not fall in the other two categories tag it as general. \n              There are no priorities and the tags are strictly to filter and classify the ideas.\n            </Typography>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n          <Widget title=\"\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n          <Notification\n              className={classes.notificationItem}\n              type=\"collaborate\"\n              shadowless\n              message=\"Collaborate\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <br />\n            <Typography variant=\"h5\">\n            Collaborate within and outside the team to bring in diverse knowledge and skillset to the idea.\n            </Typography>\n            <br />\n            <Typography>\n            Embrace differences.\n            </Typography>\n          </Widget>\n            </Grid>\n            <Grid item xs={4}>\n            <Widget title=\"\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"Plan & Execute\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <br />\n            <br />\n            <Grid item xs={12}>\n              <Grid item xs={12}>\n                <Typography>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Etiam non quam lacus suspendisse faucibus interdum posuere lorem. Neque sodales ut etiam sit amet nisl purus in mollis. Sit \n                amet purus gravida quis. Et tortor at risus viverra adipiscing at in tellus. \n                </Typography>\n              </Grid>\n            </Grid>\n            \n            </Widget>\n            </Grid>\n          </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n      \n    </>\n  );\n}\n","/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/Sidebar.js",["216"],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Header/Header.js",["217","218","219","220","221"],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/maps/Maps.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/Dashboard.js",["222","223","224"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport BigStat from \"./components/BigStat/BigStat\";\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport {\n  ArgumentAxis,\n  ValueAxis,\n  Chart,\n  LineSeries,\n  Legend,\n} from '@devexpress/dx-react-chart-material-ui';\n\nimport {\n  curveCatmullRom,\n  line,\n} from 'd3-shape';\n\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nconst PieChartStatusData = [\n  { name: \"Completed\", value: 400, color: \"primary\" },\n  { name: \"Processing\", value: 300, color: \"secondary\" },\n  { name: \"Hold\", value: 300, color: \"warning\" },\n  { name: \"Fresh\", value: 200, color: \"success\" },\n];\n\nconst data = [\n  { month: 'January', functional: 59, technology: 93, generic: 82, },\n  { month: 'February', functional: 10, technology: 23, generic: 58, },\n  { month: 'March', functional: 33, technology: 66, generic: 88, },\n  { month: 'April', functional: 110, technology: 12, generic: 158, },\n  { month: 'May', functional: 10, technology: 23, generic: 58, },\n  { month: 'June', functional: 59, technology: 93, generic: 82, },\n  { month: 'July', functional: 10, technology: 23, generic: 58, },\n  { month: 'August', functional: 33, technology: 66, generic: 88, },\n  { month: 'September', functional: 110, technology: 12, generic: 158, },\n  { month: 'October', functional: 45, technology: 23, generic: 34, },\n  { month: 'November', functional: 110, technology: 12, generic: 158, },\n  { month: 'December', functional: 10, technology: 23, generic: 58, },\n];\n\nconst Line1 = props => (\n  <LineSeries.Path\n    {...props}\n    path={line()\n      .x(({ arg }) => arg)\n      .y(({ val }) => val)\n      .curve(curveCatmullRom)}\n  />\n);\n\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n});\nconst legendLabelStyles = theme => ({\n  label: {\n    marginBottom: theme.spacing(1),\n    whiteSpace: 'nowrap',\n  },\n});\nconst legendItemStyles = () => ({\n  item: {\n    flexDirection: 'column-reverse',\n  },\n});\n\nconst legendRootBase = ({ classes, ...restProps }) => (\n  <Legend.Root {...restProps} className={classes.root} />\n);\nconst legendLabelBase = ({ classes, ...restProps }) => (\n  <Legend.Label className={classes.label} {...restProps} />\n);\nconst legendItemBase = ({ classes, ...restProps }) => (\n  <Legend.Item className={classes.item} {...restProps} />\n);\nconst Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\nconst Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\n\nexport default function Dashboard() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"New Ideas\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                12, 678\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={6}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Completions\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={6} sm={4} xs={12}>\n          <Widget\n            title=\"Streams\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <br />\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Functional\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={55}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Technical\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={35}\n                classes={{ barColorPrimary: classes.progressBarSecondary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                General\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Ideas by Status\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartStatusData}\n                      innerRadius={20}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartStatusData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartStatusData.map(({ name, value, color }) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Most Voted Ideas\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={20}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  New Ideas per Month\n                </Typography>\n              </div>\n            }\n          >\n            <Paper>\n              <Chart\n                data={data}\n              >\n                <ArgumentAxis />\n                <ValueAxis />\n                <LineSeries\n                  name=\"Functional\"\n                  valueField=\"functional\"\n                  argumentField=\"month\"\n                  seriesComponent={Line1}\n                />\n                <LineSeries\n                  name=\"Technical\"\n                  valueField=\"technology\"\n                  argumentField=\"month\"\n                  seriesComponent={Line1}\n                />\n                <LineSeries\n                  name=\"Generic\"\n                  valueField=\"generic\"\n                  argumentField=\"month\"\n                  seriesComponent={Line1}\n                />\n                <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\n              </Chart>\n            </Paper>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map(() => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(500, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(100, 500, 1500, 2500, 3500);\n  var ai = getRandomData(31, 500, 7500, 10500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n      ai: ai[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/mock.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/components/Table/Table.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/notifications/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/home/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/PageTitle/PageTitle.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Widget/Widget.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/maps/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Header/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/charts/components/ApexLineChart.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/charts/components/ApexHeatmap.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/components/BigStat/BigStat.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/components/Dot.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Notification/Notification.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Wrappers/Wrappers.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/PageTitle/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Widget/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/dashboard/components/BigStat/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Sidebar/components/SidebarLink/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/components/Notification/styles.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahubnew/IdeaHubForm.js",["225","226"],"import React from \"react\";\nimport { Grid, TextField, FormControlLabel, Checkbox, Button } from \"@material-ui/core\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Widget from \"../../components/Widget\";\n\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport ChipInput from 'material-ui-chip-input';\nimport { DropzoneArea } from \"material-ui-dropzone\";\n\nexport default function IdeaHubPage() {\n\n  const history = useHistory();\n  \n    function handleSubmit(event) {\n      history.push(\"./ideaHubNew\");\n    }\n  \n    // render() {\n      return (\n        <Widget disableWidgetMenu>\n          <React.Fragment>\n          <Typography variant=\"h6\" gutterBottom>\n            Idea!!!\n          </Typography>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"summary\"\n                name=\"summary\"\n                label=\"Summary\"\n                fullWidth\n                autoComplete=\"summary\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"description\"\n                name=\"description\"\n                label=\"Description\"\n                minRows={3}\n                multiline variant=\"outlined\" \n                style={{ margin: 8 }} \n                margin=\"normal\"\n                fullWidth\n                autoComplete=\"description\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"uniqueness\"\n                name=\"uniqueness\"\n                label=\"What makes the Idea different from others?\"\n                minRows={3}\n                multiline variant=\"outlined\" \n                style={{ margin: 8 }} \n                margin=\"normal\"\n                fullWidth\n                autoComplete=\"uniqueness\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"owner\"\n                name=\"owner\"\n                label=\"Owner\"\n                fullWidth\n                autoComplete=\"shipping address-level2\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <TextField id=\"date\" label=\"Date\" type=\"date\" defaultValue=\"2017-05-24\" variant=\"outlined\" style={{ margin: 8 }} margin=\"normal\" fullWidth/>\n            </Grid>\n            <Grid item xs={12}>\n            <ChipInput\n              label=\"Tag your ideas\"\n              fullWidth\n            />\n            </Grid>\n            <Grid item xs={12}>\n              <DropzoneArea />\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container item xs={12} spacing={1}>\n                  <Grid item xs={6}>\n                    <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" component={Link} size=\"large\" fullWidth>Create Ideas</Button>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Button variant=\"contained\" color=\"primary\" component={Link} size=\"large\" to=\"./ideaHubNew\" fullWidth>Cancel</Button>\n                  </Grid>\n                </Grid>\n            </Grid>\n          </Grid>\n        </React.Fragment>\n      </Widget>\n      );\n    // }\n//  }\n}","/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahubnew/IdeaHub.js",["227","228","229","230","231","232","233"],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/ideahub/IdeaList.js",["234"],"/Users/i043373/Documents/GitHub/issuetracker/src/components/cardlist/cardlist.js",[],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/profile/Profile.js",["235","236","237","238","239","240","241","242","243","244"],"/Users/i043373/Documents/GitHub/issuetracker/src/pages/profile/styles.js",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":5,"column":3,"nodeType":"251","messageId":"252","endLine":5,"endColumn":11},{"ruleId":"249","severity":1,"message":"253","line":15,"column":8,"nodeType":"251","messageId":"252","endLine":15,"endColumn":13},{"ruleId":"249","severity":1,"message":"254","line":22,"column":8,"nodeType":"251","messageId":"252","endLine":22,"endColumn":12},{"ruleId":"249","severity":1,"message":"255","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":25},{"ruleId":"249","severity":1,"message":"256","line":6,"column":10,"nodeType":"251","messageId":"252","endLine":6,"endColumn":15},{"ruleId":"249","severity":1,"message":"257","line":7,"column":8,"nodeType":"251","messageId":"252","endLine":7,"endColumn":18},{"ruleId":"249","severity":1,"message":"258","line":17,"column":22,"nodeType":"251","messageId":"252","endLine":17,"endColumn":28},{"ruleId":"249","severity":1,"message":"259","line":246,"column":12,"nodeType":"251","messageId":"252","endLine":246,"endColumn":34},{"ruleId":"249","severity":1,"message":"260","line":290,"column":12,"nodeType":"251","messageId":"252","endLine":290,"endColumn":38},{"ruleId":"249","severity":1,"message":"261","line":7,"column":8,"nodeType":"251","messageId":"252","endLine":7,"endColumn":19},{"ruleId":"249","severity":1,"message":"262","line":6,"column":24,"nodeType":"251","messageId":"252","endLine":6,"endColumn":41},{"ruleId":"249","severity":1,"message":"253","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":13},{"ruleId":"249","severity":1,"message":"263","line":66,"column":8,"nodeType":"251","messageId":"252","endLine":66,"endColumn":16},{"ruleId":"249","severity":1,"message":"264","line":66,"column":18,"nodeType":"251","messageId":"252","endLine":66,"endColumn":29},{"ruleId":"249","severity":1,"message":"265","line":67,"column":8,"nodeType":"251","messageId":"252","endLine":67,"endColumn":21},{"ruleId":"249","severity":1,"message":"266","line":67,"column":23,"nodeType":"251","messageId":"252","endLine":67,"endColumn":39},{"ruleId":"249","severity":1,"message":"267","line":116,"column":8,"nodeType":"251","messageId":"252","endLine":116,"endColumn":22},{"ruleId":"249","severity":1,"message":"268","line":116,"column":24,"nodeType":"251","messageId":"252","endLine":116,"endColumn":41},{"ruleId":"249","severity":1,"message":"269","line":393,"column":10,"nodeType":"251","messageId":"252","endLine":393,"endColumn":26},{"ruleId":"249","severity":1,"message":"270","line":2,"column":27,"nodeType":"251","messageId":"252","endLine":2,"endColumn":43},{"ruleId":"249","severity":1,"message":"271","line":2,"column":45,"nodeType":"251","messageId":"252","endLine":2,"endColumn":53},{"ruleId":"249","severity":1,"message":"258","line":2,"column":16,"nodeType":"251","messageId":"252","endLine":2,"endColumn":22},{"ruleId":"249","severity":1,"message":"272","line":3,"column":10,"nodeType":"251","messageId":"252","endLine":3,"endColumn":14},{"ruleId":"249","severity":1,"message":"273","line":8,"column":8,"nodeType":"251","messageId":"252","endLine":8,"endColumn":17},{"ruleId":"249","severity":1,"message":"274","line":9,"column":8,"nodeType":"251","messageId":"252","endLine":9,"endColumn":14},{"ruleId":"249","severity":1,"message":"275","line":10,"column":8,"nodeType":"251","messageId":"252","endLine":10,"endColumn":13},{"ruleId":"249","severity":1,"message":"276","line":13,"column":8,"nodeType":"251","messageId":"252","endLine":13,"endColumn":12},{"ruleId":"249","severity":1,"message":"277","line":30,"column":9,"nodeType":"251","messageId":"252","endLine":30,"endColumn":16},{"ruleId":"249","severity":1,"message":"277","line":33,"column":9,"nodeType":"251","messageId":"252","endLine":33,"endColumn":16},{"ruleId":"249","severity":1,"message":"278","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"279","line":3,"column":3,"nodeType":"251","messageId":"252","endLine":3,"endColumn":13},{"ruleId":"249","severity":1,"message":"280","line":6,"column":3,"nodeType":"251","messageId":"252","endLine":6,"endColumn":7},{"ruleId":"249","severity":1,"message":"281","line":7,"column":3,"nodeType":"251","messageId":"252","endLine":7,"endColumn":6},{"ruleId":"249","severity":1,"message":"282","line":8,"column":3,"nodeType":"251","messageId":"252","endLine":8,"endColumn":8},{"ruleId":"249","severity":1,"message":"283","line":9,"column":3,"nodeType":"251","messageId":"252","endLine":9,"endColumn":7},{"ruleId":"249","severity":1,"message":"284","line":10,"column":3,"nodeType":"251","messageId":"252","endLine":10,"endColumn":11},{"ruleId":"249","severity":1,"message":"258","line":11,"column":3,"nodeType":"251","messageId":"252","endLine":11,"endColumn":9},{"ruleId":"249","severity":1,"message":"285","line":12,"column":3,"nodeType":"251","messageId":"252","endLine":12,"endColumn":12},{"ruleId":"249","severity":1,"message":"286","line":14,"column":13,"nodeType":"251","messageId":"252","endLine":14,"endColumn":18},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'logo' is defined but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'classnames' is defined but never used.","'Button' is defined but never used.","'handleNotificationCall' is defined but never used.","'changeNotificationPosition' is defined but never used.","'pyramiImage' is defined but never used.","'NotificationsIcon' is defined but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'getMainChartData' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'PageTitle' is defined but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Paper' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Lightbulb' is defined but never used.","'Icons' is defined but never used.","no-global-assign","no-unsafe-negation"]